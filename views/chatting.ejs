<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Rocket Messenger</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR&display=swap" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="../static/css/rocket_chat.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/3.0.4/socket.io.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.js"
            integrity="sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css" integrity="sha384-DyZ88mC6Up2uqS4h/KRgHuoeGwBcD4Ng9SiP4dIRy0EXTlnuz47vAwmeGwVChigm" crossorigin="anonymous">
    <link rel="icon" href="../static/favicon/rocket1.ico" type="image/x-icon" sizes="16x16">
    <script src="http://code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<!--    메모장-->
    <link rel="stylesheet" type="text/css" href="assets/content-tools.min.css">
    <script src="assets/content-tools.min.js"></script>
<!--    <script src="https://cdn.jsdelivr.net/npm/jquery@3.2.1/dist/jquery.min.js"></script>-->
    <style>
        body{
            font-family: 'Noto Sans KR', sans-serif;
        }
    </style>
</head>
<body>
    <div class="content1">
        <div class="content1_left">
<!--            <img class="logo" src="../static/image/rocket_messenger_logo.png">-->
            <i class="fab fa-rocketchat"></i>
            <span class="content1_name">Rocket Messenger</span>
        </div>
        <span class="content1_dev">Developed by Jeong Sohyun</span>
    </div>
    <div class="content2">
        <!-- Modal -->
        <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">프로필 변경</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form action="" method="post" id="form_data" enctype="multipart/form-data">
                            <div class="image_upload">
                                <label for="image_upload">프로필 사진</label><br>
                                <input type="file" name='image_upload' id="image_upload">
                            </div>
                            <div class="user_name">
                                <label for="user_name">유저 이름</label><br>
                                <input type="text" name='user_name' id="user_name">
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary modal_close" data-bs-dismiss="modal">Close</button>
                        <button type="button" id="setting_change" class="btn" data-bs-dismiss="modal" onclick="change_profile(event)">저장</button>
                    </div>
                </div>
            </div>
        </div>
        <!-- Modal Finish-->
        <div id="setting_bar">
            <button type="button" class="setting_mypic"></button >
            <button type="button" class="setting_custom" data-bs-toggle="modal" data-bs-target="#exampleModal"><i class="fas fa-cog"></i></button >
            <div class="m_content1">
                <div class="m_content1_left">
                    <i class="fab fa-rocketchat"></i>
                    <span class="content1_name">Rocket Messenger</span>
                </div>
                <button type="button" class="setting_hamburger" data-bs-toggle="offcanvas" data-bs-target="#offcanvasRight" aria-controls="offcanvasRight"><i class="fas fa-bars"></i></button>
            </div>
        </div>
        <div id="second_bar">
            <button type="button" class="btn_mychat" onclick="btn_mychat()">메모</button>
            <div class="memo_list d-none">
                <div class="memo_list_header">
                    <button>
                        <i class="fas fa-arrow-left" onclick="btn_mychat()"></i>
                    </button>
                </div>
                <div class="memo_list_body">
                    <div class="write_memo">
                        <div class="write_memo_i">
                            <i class="far fa-sticky-note"></i>
                        </div>
                        <div>첫 메모를 작성해보세요</div>
                    </div>
                </div>
                <div class="memo_list_footer" onclick="add_memo()">
                    <i class="fas fa-plus"></i>
                </div>
            </div>
            <div class="memo_textarea d-none">
                <div class="memo_list_header">
                    <button>
                        <i class="fas fa-arrow-left" onclick="memo_off()"></i>
                    </button>
                </div>
                <div class="memo_each">
                    <div data-editable data-name="main-content" class="d-none">
                    </div>
                </div>
            </div>
            <!-- 참여자 -->
            <div class="participants_bar">
                <div class="participants_header">
                    <div class="participants_icon"><i class="fas fa-user-friends"></i></div>
                    <div class="participants_txt">참여자</div>
                    <div class="participants_number"></div>
                </div>
                <div class="participants"></div>
                <!-- 참여채널 -->
                <!--        <div class="participants_header">-->
                <!--            <div class="participants_icon"><i class="fas fa-comments"></i></div>-->
                <!--            <div class="participants_txt">참여채널</div>-->
                <!--        </div>-->
            </div>
        </div>
        <div id="chat_bar">
            <div id="chat_name">
                <span class="elapse_time elapse_opacity"></span>
            </div>
            <div class="chatting_1">
                <div class="chat_back">
                    <div class="chat_history">
                    </div>
                </div>
                <div class="writing writing_opacity">
                    <span class="writing_txt">상대방이 대화 작성 중 </span>
                    <div class="lds-ellipsis">
                        <div class="ball"></div>
                        <div class="ball"></div>
                        <div class="ball"></div>
                        <div class="ball"></div>
                    </div>
                </div>
                <div class="chat_whisper d-none">
                    <select name="whisper" id="whisper" size="2" onchange="select_whisper(event)">
                        <!--                <option selected>귓속말</option>-->
                    </select>
                </div>
                <div class="chat_footer">
                    <div class="chat_editor">
                        <button type="button" class="btn_whisper"><i class="fas fa-at"></i></button>
                        <textarea name="chat_input" id="chat_input_1" class="chat_input_1" placeholder="메시지를 입력해주세요" autofocus></textarea>
    <!--                    <form action="" method="post" id="form_data" enctype="multipart/form-data">-->
    <!--                        <input type="file" name='btn_send_img' id="btn_send_img" class="d-none">-->
    <!--                        <button type="button" class="btn_send_img"><i class="far fa-image"></i></button>-->
    <!--                    </form>-->
                        <button type="button" class="send_btn" onclick="send(event)"><i class="fas fa-paper-plane"></i></button>
                    </div>
                </div>
            </div>
        </div>
        <!--반응형-->
        <div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasRight" aria-labelledby="offcanvasRightLabel">
            <div class="offcanvas-body">
                <div class="offcanvas-body_header">
                    <button type="button" data-bs-dismiss="offcanvas" aria-label="Close"><i class="fas fa-chevron-left"></i></button>
                    <button type="button" class="setting_custom" data-bs-toggle="modal" data-bs-target="#exampleModal"><i class="fas fa-cog"></i></button>
                </div>
                <button type="button" class="btn_mychat" onclick="btn_mychat()">메모</button>
                <div class="memo_list d-none">
                    <div class="m_memo_list_header">
                        <button>
                            <i class="fas fa-chevron-left" onclick="btn_mychat()"></i>
<!--                            <i class="fas fa-arrow-left" onclick="btn_mychat()"></i>-->
                        </button>
                    </div>
                    <div class="memo_list_body">
                        <div class="write_memo">
                            <div class="write_memo_i">
                                <i class="far fa-sticky-note"></i>
                            </div>
                            <div>첫 메모를 작성해보세요</div>
                        </div>
                    </div>
                    <div class="memo_list_footer" onclick="add_memo()">
                        <i class="fas fa-plus"></i>
                    </div>
                </div>
                <div class="memo_textarea d-none">
                    <div class="m_memo_list_header">
                        <button>
                            <i class="fas fa-chevron-left" onclick="memo_off()"></i>
                        </button>
                    </div>
                    <div class="memo_each">
<!--                        <div data-editable data-name="main-content" class="d-none">-->
<!--                        </div>-->
                    </div>
                </div>
                <!-- 참여자 -->
                <div class="participants_bar">
                    <div class="participants_header">
                        <div class="participants_icon"><i class="fas fa-user-friends"></i></div>
                        <div class="participants_txt">참여자</div>
                        <div class="participants_number"></div>
                    </div>
                    <div class="participants"></div>
                </div>
            </div>
        </div>
    </div>
    <script>
        //css mobile vh issue
        let vh = window.innerHeight * 0.01
        document.documentElement.style.setProperty('--vh', `${vh}px`)
        window.addEventListener('resize', () => {
            vh = window.innerHeight * 0.01
            document.documentElement.style.setProperty('--vh', `${vh}px`)
            window_width = window.innerWidth;
            if(window_width < 769){
                $('.chat_input_1').removeAttr('autofocus');
            }
        })

        let window_width = window.innerWidth;
        if(window_width < 769){
            $('.chat_input_1').removeAttr('autofocus');
        }

        //contentTools import
        let editor = ContentTools.EditorApp.get();
        editor.init('*[data-editable]', 'data-name');

        //메모장
        let memo_num = 0;
        $('body > div.ct-app > div > div.ct-ignition__button.ct-ignition__button--confirm,' +
            'body > div.ct-app > div > div.ct-ignition__button.ct-ignition__button--cancel').click(function(){
            $('.memo_input').removeClass('ce-element ce-element--type-text');
        })
        function add_memo(){
            stamp_today();
            memo_num += 1;
            $('.memo_list_body').append(`
                <div class="memo${memo_num} memo_wrap" id="con" onclick="memo_on(${memo_num})">
                    <button class="memo">
                        <span class="memo_btn">
                            <span class="memo_title">제목 없음</span>
                            <span  class="memo_time">${today}</span>
                        </span>
                    </button>
                    <i class="fas fa-times del_memo" onclick="del_memo(${memo_num})"></i>
                </div>
            `);
            $('#second_bar > div.memo_textarea.d-none > div.memo_each').append(
                `<div data-editable data-name="main-content" class="memo_input memo_input${memo_num} d-none ">
                    <h1></h1>
                </div>`
            )
            // $('.memo_each').append(
            //     `<textarea name="memo_input${memo_num}" class="memo_input${memo_num} d-none " placeholder="메모를 작성할 수 있습니다." autofocus=""></textarea>`
            // )
            $('.write_memo').addClass('d-none');
        }
        let del;
        function del_memo(number){
            del = 'del';
            $(`.memo${number}, .memo_input${number}`).remove();
            if($('.memo_list_body').children().length == 2){
                $('.write_memo').removeClass('d-none');
            }
        }

        let get_memo_num;
        function memo_on(number){
            if(del == 'del'){
                del = undefined;
                return;
            }
            memo_num = number;
            $(`.memo_list, .memo_textarea, .memo_input${number}`).toggleClass('d-none');
            $('#chat_bar').css({'box-shadow': 'none', 'border-left': '1px solid var(--color-deep)'})
            $(' .ct-app').css({'display': 'block'})
        }
        function memo_off(){
            if($('div.ct-app').children().length == 1){
                $(`.memo_textarea, .memo_list, .memo_input${memo_num}`).toggleClass('d-none');
                $(' .ct-app').css({'display': 'none'})
                if($(`.memo_input${memo_num}`)[0].firstChild.innerText.trim() == "" ){
                    $(`.memo${memo_num} .memo_title`).text('제목 없음');
                }else{
                    $(`.memo${memo_num} .memo_title`).text($(`.memo_input${memo_num}`)[0].firstChild.innerText);
                }
            }else{
                alert('메모작성을 완료해주세요');
            }
        }
        function btn_mychat (){
            $('.memo_list, .btn_mychat, .participants_bar, .offcanvas-body_header').toggleClass('d-none');
        }

        //귓속말
        let chat_input_1 = document.getElementById('chat_input_1');
        let caret_whisper; //현재 커서 위치
        let select_whisper_id; //채팅 보낼때 css를 적용을 위한 변수

        $('.chat_input_1').on('keydown', show_whisper);
        $('.btn_whisper').on('click', click_whisper_btn);
        function click_whisper_btn(){
            if($('#whisper')[0].length >= 2){
                $('.chat_whisper').removeClass('d-none');
                caret_whisper = $('.chat_input_1')[0].selectionStart;
                chat_input_1.setRangeText('@', caret_whisper, caret_whisper+1, "end");
            }
        }
        function show_whisper(e){
            if($('#whisper')[0].length >= 2){
                if(e.shiftKey){
                    switch(e.code){
                        case 'Digit2':
                            $('.chat_whisper').removeClass('d-none');
                            caret_whisper = $('.chat_input_1')[0].selectionStart;
                            break;
                    }
                }
            }
            if(e.code == 'Backspace'){
                $('.chat_whisper').addClass('d-none');
            }
        }
        function select_whisper(e){
            //e 는 change event
            const chat_input1 = document.getElementById('chat_input_1');
            $('.chat_whisper').addClass('d-none');
            chat_input1.setRangeText(e.target.value+' ', caret_whisper+1, caret_whisper+e.target.value.length, "end");
            chat_input1.focus();
            caret_whisper = '';
            select_whisper_id = e.target.value;
            socket.emit('whisper', e.target.value);
            $('#whisper')[0].selectedIndex = -1; //selectIndex는 select태그에 자동 선택할 인덱스를 정하는 메서드
        }

        //입력중인 메세지
        let count_e = 0;
        $('.chat_input_1').on('input', writing);
        function writing(e){
            count_e += 1;
            if(count_e == 1){
                writing_one();
            }else if(e.target.textLength == 0){
                writing_zero();
            }
        }
        function writing_one(){
            socket.emit('writing', {
                one: '1',
                user_name: userName
            });
        }
        function writing_zero(){
            count_e = 0;
            socket.emit('writing', {
                zero: '0',
                user_name: userName
            });
        }

        //웹페이지 종료시 '입력중인 메세지창' 닫기
        window.addEventListener('unload', un_load);
        function un_load(){
            count_e = 0;
            writing_zero();
        }

        //채팅입력시 '보내기 버튼' css활성화
        $('.chat_input_1').on('keyup', active_send_btn);
        $('.chat_input_2').on('keyup', active_send_btn);
        let input_value;
        function active_send_btn(e){
            let chat_input_1 = e.target.className.charAt(11);
            if(e.target.value == ''){
                $(`.chatting_1 chat_input_1 .send_btn`).removeClass('active_btn');
            }else{
                $(`.chatting_1 chat_input_1 .send_btn`).addClass('active_btn');
            }
        }

        //채팅창 ctrl+Enter && 보내기 기능
        $('.chat_input_1').on('keydown', about_enter);
        function about_enter(e){
            if(e.isComposing || e.keyCode === 229){
                return;
            }else if(e.ctrlKey && e.code == 'Enter'){
                let caret = e.target.selectionStart;
                e.target.setRangeText("\n", caret, caret, "end");
            }
            else if(e.code == 'Enter'){
                if($(this).val().trim() == ''){
                    // alert('메세지입력해줘');
                    e.preventDefault();
                    return;
                }else{
                    e.preventDefault();// 원래 enter key를 누르려던 것을 못하게한다.
                    send(e, 1);
                    writing_zero();
                }
            }
        }

        //채팅에서 링크를 하이퍼링크로 만들기
        const urlRegex =/(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/ig;
        let url_exist;
        function linkify(text) {
            return text.replace(urlRegex, function(url) {
                url_exist = 'url_exist';
                return '<a href="' + url + '" target="_blank">' + url + '</a>';
            });
        }

        //채팅 보내기
        function send(e){
            if($(`.chat_input_1`).val().trim() == ''){
                // alert('메세지입력해줘');
                e.preventDefault();
                return;
            }else{
                e.preventDefault();// 원래 enter key를 누르려던 것을 못하게한다.
                const msg_txt_text = linkify($(`.chat_input_1`).val());
                const msg_wrapper = document.createElement('div');
                const msg_profile_pic = document.createElement('div');
                const msg_content = document.createElement('div');
                const msg_nameNtime = document.createElement('div');
                const msg_name = document.createElement('span');
                const msg_time = document.createElement('span');
                const msg_txt = document.createElement('span');
                msg_wrapper.classList.add('my_msg');
                msg_wrapper.classList.add(userName);
                //whisper 유무에 따른 css적용을 위한 class 추가
                if(select_whisper_id != undefined){
                    msg_wrapper.classList.add('my_whisper');
                    select_whisper_id = undefined;
                }
                msg_profile_pic.classList.add('msg_profile_pic');
                //프로필 사진
                if(profilePic == socketId){
                    msg_profile_pic.style.backgroundColor = random_profile_color;
                    const msg_profile_pic_random_img = document.createElement('img');
                    msg_profile_pic_random_img.setAttribute('src', `../static/image/image (${random_profile_number}).png`);
                    msg_profile_pic.append(msg_profile_pic_random_img);
                }else{
                    msg_profile_pic.style.backgroundImage = `url(../${profilePic})`;
                }
                msg_content.classList.add('msg_content');
                msg_nameNtime.classList.add('msg_nameNtime');
                msg_txt.classList.add('msg_txt');
                if(url_exist == 'url_exist'){
                    msg_txt.innerHTML = msg_txt_text;
                }else {
                    msg_txt.innerText = msg_txt_text;
                }
                msg_name.innerText = userName;
                msg_name.classList.add('msg_name');
                msg_time.classList.add('msg_time');
                msg_nameNtime.append(msg_time);
                msg_nameNtime.append(msg_name);
                msg_content.append(msg_nameNtime, msg_txt);
                msg_wrapper.append(msg_profile_pic, msg_content);
                $(`.chatting_1 .chat_history`).append(msg_wrapper);

                // const msg_txt_text = linkify($(`.chat_input_1`).val());
                // console.log(msg_txt_text);
                // // //whisper 유무에 따른 css적용을 위한 class 추가
                // let whisper_class = "";
                // if(select_whisper_id != undefined){
                //     whisper_class = "my_whisper";
                //     select_whisper_id = undefined;
                // }
                // // //프로필 사진
                // if(profilePic == socketId){
                //     let msg_profile_pic_color = `background-color: ${random_profile_color}`;
                //     let img = '<img src="../static/image/image (${random_profile_number}).png" alt="">';
                // }else{
                //     let msg_profile_pic_pic = `background-image: url(../${profilePic})`;
                // }
                // // 하이퍼링크
                // if(url_exist == 'url_exist' ){
                //     $('.msg_txt').html = msg_txt_text;
                // }else {
                //     $('.msg_txt').text = msg_txt_text;
                // }
                // $(`.chatting_1 .chat_history`).append(
                //     `<div class="msg_wrapper my_msg ${userName}"` + whisper_class + `>
                //         <div class="msg_profile_pic" + msg_profile_pic_color + msg_profile_pic_pic> + img + </div>
                //         <div class="msg_content">
                //             <div class="msg_nameNtime">
                //                 <div class="msg_time"></div>
                //                 <div class="msg_name">${userName}</div>
                //             </div>
                //             <div class="msg_txt">${msg_txt_text}</div>
                //         </div>
                //     </div>
                // `);
                //
                socket.emit('send', {
                    user_name: userName,
                    profile_pic: profilePic,
                    random_profile_number: random_profile_number,
                    random_profile_color: random_profile_color,
                    msg: $(`.chat_input_1`).val(),
                    url_exist: url_exist,
                });
                $(`.chat_input_1`).val('');
                url_exist = undefined;
                $(`.chat_input_1 .chat_back`).scrollTop($(`.chat_input_1 .chat_history`).height());
                $(`.chat_input_1`).focus();
                if($('#whisper').hasClass('d-none') == false){
                    $('.chat_whisper').addClass('d-none');
                }
            }
        }
        //프로필 변경
        function change_profile(e){
            if($('#image_upload').val() == ''){
                //프로필사진 변경 안함 + 닉네임만 변경
                if(check_user_name(e) == 'go_next'){
                    change_username_socket();
                }
            }else{
                //프로필사진 변경 함
                if(check_user_name(e) == 'go_next'){
                    change_profile_pic();
                    change_username_socket();
                }
            }
        }
        //프로필 닉네임창 Enter키로 저장
        $('input[name=user_name]').on('keydown', enter_profile);
        function enter_profile(e){
            if(e.which == 13){
                change_profile(e);
            }
        }
        //유저이름 유효성 확인
        function check_user_name(e){
            if($('input[name=user_name]').val().trim() == ''){
                //닉네임 값이 없을경우
                $('#user_name').val(userName);
                e.preventDefault(); //form전송 방지
            }else if($('input[name=user_name]').val().trim() == $(`.participants_name.${userName} .participants_user_name`)[0].innerText.trim()){
                //닉네임이 기존과 같을 경우
                e.preventDefault(); //form전송 방지
                if($('#image_upload').val() != ''){
                    change_profile_pic(e);
                }
                $('.modal_close').trigger('click');
            }
            else{
                //닉네임 바꿀 경우
                e.preventDefault(); //form전송 방지
                $('.modal_close').trigger('click');
                return 'go_next';
            }
        }
        //유저 이미지 업로드
        function change_profile_pic(){
            let form_data;
            form_data = new FormData($('#form_data')[0]);
            form_data.append('socket_id', socketId);
            $.ajax({
                type: 'POST',
                url: '/file_upload',
                data: form_data,
                enctype: 'multipart/form-data',
                processData:false,
                contentType:false,
                success: function(data){
                    alert('성공: ');
                    profilePic = data;
                    socket.emit('change_profile_pic', {
                        user_name: $('input[name=user_name]').val(),
                        socket_id: socketId
                    });
                },
                error: function(err){
                    alert('실패: ' + err.statusText);
                }
            });
        }
        //유저이름 바꾸는 소켓
        function change_username_socket(){
            socket.emit('change_user_name', {
                user_name: $('input[name=user_name]').val(),
                socket_id: socketId
            });
        }
        //소켓
        const socket = io.connect(); //서버와 소켓을 생성한다.
        let socketId;
        let userName;
        let profilePic;
        let random_profile_number;
        let random_profile_color;

        socket.on('connect', function(data){
            // $('.chat_history').append("<p class='sys'>" + socket.id + " 입장 </p>");
        })

        socket.on('save_info', (data)=>{
            // console.log(`메세지 보낸사람은 ${data} 나의 아이디는 ${data}`);
            socketId = data.socket_id;
            userName = data.new_user.user_name;
            profilePic = data.new_user.profile_pic;
            random_profile_number = data.new_user.random_profile_num;
            random_profile_color = data.new_user.random_rgb;

            //랜덤 프로필 사진
            $('.setting_mypic').empty();
            $('.setting_mypic').append(`<img src="../static/image/image (${random_profile_number}).png">`);
            $('.setting_mypic').addClass(userName);

            //랜덤 프로필 색상
            $('.setting_mypic').css({'background-color': random_profile_color});

            //프로필 닉네임 변경창
            $('#user_name').val(userName);
        });

        socket.on('enter', (data)=>{
            // 오늘날짜 생성
            if($(`.${data.get_today_dic.today_for_class}`)[0] == undefined){
                $('.chatting_1 .chat_history').append(`<p class='sys_date ${data.get_today_dic.today_for_class}'>${data.get_today_dic.today}</p>`);
            }

            //입장 메세지
            $('.chatting_1 .chat_history').append(`<p class='sys'> <span class='${data.socket_id}'>${data.socket_id}</span> 님이 입장하셨습니다 </p>`);
            $('.chatting_1 .chat_back').scrollTop($('.chatting_1 .chat_history').height());

            //참여자 목록과 인원 && 귓속말 목록
            $('.participants').empty();
            $('.whisper_op').remove();
            for(let key in data.user_list){
                if(data.user_list[key].id == socketId) {
                    $('.participants').prepend(`
                        <div class='participants_name ${data.user_list[key].user_name}'>
                            <div class='participants_user_pic'></div>
                            <span class='participants_me'> me </span>
                            <div class='participants_user_name'> ${data.user_list[key].user_name} </div>
                        </div>`
                    );
                    if (data.user_list[key].profile_pic == data.user_list[key].id) {
                        $(`.participants_name.${data.user_list[key].user_name} .participants_user_pic`).css({'background-color': `${data.user_list[key].random_rgb}`});
                        $(`.participants_name.${data.user_list[key].user_name} .participants_user_pic`).append(`<img src="../static/image/image (${data.user_list[key].random_profile_num}).png">`);
                    }else {
                        $(`.participants_name.${data.user_list[key].user_name} .participants_user_pic`).css({'background-image': `url(../${data.user_list[key].profile_pic})`});
                    }
                }else {
                    $('.participants').append(`
                        <div class='participants_name ${data.user_list[key].user_name}'>
                            <div class='participants_user_pic'></div>
                            <div class='participants_user_name'> ${data.user_list[key].user_name} </div>
                        </div>`
                    );
                    if (data.user_list[key].profile_pic == data.user_list[key].id) {
                        $(`.participants_name.${data.user_list[key].user_name} .participants_user_pic`).css({'background-color': `${data.user_list[key].random_rgb}`});
                        $(`.participants_name.${data.user_list[key].user_name} .participants_user_pic`).append(`<img src="../static/image/image (${data.user_list[key].random_profile_num}).png">`);
                    }else {
                        $(`.participants_name.${data.user_list[key].user_name} .participants_user_pic`).css({'background-image': `url(../${data.user_list[key].profile_pic})`});
                    }
                }
                if(socketId != data.user_list[key].id) {
                    $('#whisper').append(`<option class='whisper_op ${data.user_list[key].user_name}' value="${data.user_list[key].user_name}"> ${data.user_list[key].user_name} </option>`);
                }
                $('.participants_number').text(data.user_list.length + '명');
            }
        });

        socket.on('ten_timer', (data)=>{
            let data_elapse_time = data;
            if(data < 60000){ // 1분 미만
                data_elapse_time = data / 1000;
                $('.elapse_time').text(`마지막 대화 ${data_elapse_time}초 전`);
            }else if(data < 3600000){ // 1시간 미만
                data_elapse_time = Math.floor(data / 1000 / 60);
                $('.elapse_time').text(`마지막 대화 ${data_elapse_time}분 전`);
            }else if(data < 86400000){ // 1일 미만
                data_elapse_time = Math.floor(data / 1000 / 60 / 60);
                $('.elapse_time').text(`마지막 대화 ${data_elapse_time}시간 전`);
            }else if(data < 2592000000){ // 30일 미만
                data_elapse_time = Math.floor(data / 1000 / 60 / 60 / 24);
                $('.elapse_time').text(`마지막 대화 ${data_elapse_time}일 전`);
            }else{
                data_elapse_time = Math.floor(data / 1000 / 60 / 60 / 24 / 30);
                $('.elapse_time').text(`마지막 대화 30일 전`);
            }
            $('.elapse_time').removeClass('elapse_opacity');
        });

        socket.on('stop_elapse_time', ()=>{
                $('.elapse_time').text(``);
                $('.elapse_time').addClass('elapse_opacity');
        });

        socket.on('writing', (data)=>{
            if(data.socket_id != socketId){
                if(data.data.one){
                    $('.writing').removeClass('writing_opacity');
                }else if(data.data.zero){
                    $('.writing').addClass('writing_opacity');
                }
            }
        });

        socket.on('new_msg', (data)=>{
            $('.msg_time').text(data.server_data.stamp_time);
            // 오늘날짜 생성
            if($(`.${data.server_data.get_today_dic.today_for_class}`)[0] == undefined){
                $('.chatting_1 .chat_history').append(`<p class='sys_date ${data.server_data.get_today_dic.today_for_class}'>${data.server_data.get_today_dic.today}</p>`);
            }
            const msg_wrapper = document.createElement('div');
            const msg_profile_pic = document.createElement('div');
            const msg_content = document.createElement('div');
            const msg_nameNtime = document.createElement('div');
            const msg_name = document.createElement('div');
            const msg_time = document.createElement('div');
            const msg_txt = document.createElement('div');
            //귓속말일때
            if(data.server_data.whisper != undefined){
                if(data.server_data.whisper == userName){
                    msg_wrapper.classList.add('whisper_msg');
                    msg_wrapper.classList.add(data.server_data.user_info.user_name);
                    msg_profile_pic.classList.add('msg_profile_pic');
                    //상대방 프로필 사진
                    if(data.server_data.user_info.profile_pic == data.server_data.socket_id){ //유저 랜덤 프로필 사진
                        msg_profile_pic.style.backgroundColor = data.server_data.user_info.random_profile_color;
                        const msg_profile_pic_random_img = document.createElement('img');
                        msg_profile_pic_random_img.setAttribute('src', `../static/image/image (${data.server_data.user_info.random_profile_number}).png`);
                        msg_profile_pic.append(msg_profile_pic_random_img);
                    }else{
                        msg_profile_pic.style.backgroundImage = `url(../${data.server_data.user_info.profile_pic})`;
                    }
                    msg_content.classList.add('msg_content');
                    msg_nameNtime.classList.add('msg_nameNtime');
                    msg_txt.classList.add('msg_txt');
                    msg_name.innerText = data.server_data.user_info.user_name;
                    msg_time.innerText = data.server_data.stamp_time;
                    msg_name.classList.add('msg_name');
                    msg_time.classList.add('msg_time');
                    if(data.server_data.user_info.url_exist == 'url_exist'){
                        msg_txt.innerHTML = linkify(data.server_data.user_info.msg);
                    }else {
                        msg_txt.innerText = data.server_data.user_info.msg;
                    }
                    msg_txt.innerHTML = msg_txt_text;
                    msg_nameNtime.append(msg_name, msg_time);
                    msg_content.append(msg_nameNtime, msg_txt);
                    msg_wrapper.append(msg_profile_pic, msg_content);
                    $('.chatting_1 .chat_history').append(msg_wrapper);
                    $('.chatting_1 .chat_back').scrollTop($('.chatting_1 .chat_history').height());
                }
            }else{
                //귓속말 아닐때
                if(data.server_data.socket_id != socketId){
                    msg_wrapper.classList.add('new_msg');
                    msg_wrapper.classList.add(data.server_data.user_info.user_name);
                    msg_profile_pic.classList.add('msg_profile_pic');
                    //상대방 프로필 사진
                    if(data.server_data.user_info.profile_pic == data.server_data.socket_id){ //유저 랜덤 프로필 사진
                        msg_profile_pic.style.backgroundColor = data.server_data.user_info.random_profile_color;
                        const msg_profile_pic_random_img = document.createElement('img');
                        msg_profile_pic_random_img.setAttribute('src', `../static/image/image (${data.server_data.user_info.random_profile_number}).png`);
                        msg_profile_pic.append(msg_profile_pic_random_img);
                    }else{
                        msg_profile_pic.style.backgroundImage = `url(../${data.server_data.user_info.profile_pic})`;
                    }
                    msg_content.classList.add('msg_content');
                    msg_nameNtime.classList.add('msg_nameNtime');
                    msg_txt.classList.add('msg_txt');
                    msg_name.innerText = data.server_data.user_info.user_name;
                    msg_time.innerText = data.server_data.stamp_time;
                    msg_name.classList.add('msg_name');
                    msg_time.classList.add('msg_time');
                    if(data.server_data.user_info.url_exist == 'url_exist'){
                        msg_txt.innerHTML = linkify(data.server_data.user_info.msg);
                    }else {
                        msg_txt.innerText = data.server_data.user_info.msg;
                    }
                    msg_nameNtime.append(msg_name, msg_time);
                    msg_content.append(msg_nameNtime, msg_txt);
                    msg_wrapper.append(msg_profile_pic, msg_content);
                    $('.chatting_1 .chat_history').append(msg_wrapper);
                    $('.chatting_1 .chat_back').scrollTop($('.chatting_1 .chat_history').height());
                }
            }
        });

        //유저네임 변경: 본인적용
        socket.on('change_user_name', (data)=>{
            userName = data.profile.user_name;
            $('#user_name').val(data.profile.user_name);
        });

        //유저네임 변경: 모두적용
        socket.on('change_user_name_all', (data)=>{
            //닉네임 변경
            $(`.participants_name.${data.before_user_name} .participants_user_name, .${data.before_user_name} .msg_name, .whisper_op.${data.before_user_name}`).text(data.profile.user_name);
            $(`p.sys span.${data.before_user_name}`).text(data.profile.user_name);
            $(`.whisper_op.${data.before_user_name}`).val(data.profile.user_name); //whisper_op의 value값 변경
            $(`.${data.before_user_name}`).switchClass(data.before_user_name, data.profile.user_name);

        });
        //프사 변경: 모두적용
        socket.on('change_profile_pic', (data)=>{
            //프사 변경
            $(`.participants_name.${data.profile.user_name} .participants_user_pic`).css({'background-color': ''});
            $(`.setting_mypic.${data.profile.user_name}, .participants_name.${data.profile.user_name} .participants_user_pic, .${data.profile.user_name} .msg_profile_pic`).css({'background-image': `url(../${data.profile_pic})`});
            $(`.setting_mypic.${data.profile.user_name}  img, .participants_name.${data.profile.user_name} .participants_user_pic > img,  .${data.profile.user_name} .msg_profile_pic img`).addClass('d-none');

        });

        socket.on('exit', (data)=>{
            // 오늘날짜 생성
            // if($(`.${today_for_class}`)[0] == undefined){
            //     stamp_today();
            //     $('.chatting_1 .chat_history').append(`<p class='sys_date ${today_for_class}'>${today}</p>`);
            // }

            $('.chatting_1 .chat_history').append(`<p class='sys'> <span class='${data.exit_user}'>${data.exit_user}</span> 님이 퇴장하셨습니다 </p>`);
            $('.chatting_1 .chat_back').scrollTop($('.chatting_1 .chat_history').height());

            //퇴장시 참여자 목록과 인원 && 귓속말
            $('.participants').empty();
            $('.whisper_op').remove();
            for(let key in data.user_list){
                if(data.user_list[key].id == socketId) {
                    $('.participants').prepend(`
                        <div class='participants_name ${data.user_list[key].user_name}'>
                            <div class='participants_user_pic'></div>
                            <span class='participants_me'> me </span>
                            <div class='participants_user_name'> ${data.user_list[key].user_name} </div>
                        </div>`
                    );
                    if (data.user_list[key].profile_pic == data.user_list[key].id) {
                        $(`.participants_name.${data.user_list[key].user_name} .participants_user_pic`).css({'background-color': `${data.user_list[key].random_rgb}`});
                        $(`.participants_name.${data.user_list[key].user_name} .participants_user_pic`).append(`<img src="../static/image/image (${data.user_list[key].random_profile_num}).png">`);
                    }else {
                        $(`.participants_name.${data.user_list[key].user_name} .participants_user_pic`).css({'background-image': `url(../${data.user_list[key].profile_pic})`});
                    }
                }else {
                    $('.participants').append(`
                        <div class='participants_name ${data.user_list[key].user_name}'>
                            <div class='participants_user_pic'></div>
                            <div class='participants_user_name'> ${data.user_list[key].user_name} </div>
                        </div>`
                    );
                    if (data.user_list[key].profile_pic == data.user_list[key].id) {
                        $(`.participants_name.${data.user_list[key].id} .participants_user_pic`).css({'background-color': `${data.user_list[key].random_rgb}`});
                        $(`.participants_name.${data.user_list[key].user_name} .participants_user_pic`).append(`<img src="../static/image/image (${data.user_list[key].random_profile_num}).png">`);
                    }else {
                        $(`.participants_name.${data.user_list[key].user_name} .participants_user_pic`).css({'background-image': `url(../${data.user_list[key].profile_pic})`});
                    }
                }
                $('.participants_number').text(data.user_list.length + '명');
                if(socketId != data.user_list[key].id){
                    $('#whisper').append(`<option class='whisper_op' value="${data.user_list[key].id}"> ${data.user_list[key].id} </option>`);
                }

                //참여자 인원이 0명일때 elapse 기능 해제
                let participants_number = data.user_list.length;
                if(participants_number == 1){
                    socket.emit('stop_elapse_time');
                }
            }
        });
    </script>
</body>
</html>