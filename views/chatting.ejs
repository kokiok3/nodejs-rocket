<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>rocket messenger</title>
    <link rel="stylesheet" type="text/css" href="../static/css/rocket_chat.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/3.0.4/socket.io.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.js"
        integrity="sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css" integrity="sha384-DyZ88mC6Up2uqS4h/KRgHuoeGwBcD4Ng9SiP4dIRy0EXTlnuz47vAwmeGwVChigm" crossorigin="anonymous">
    <link rel="icon" href="../static/favicon/rocket1.ico" type="image/x-icon" sizes="16x16">
</head>
<body>
    <div id="setting_bar">
        <button type="button" class="setting_mypic">현재내프사</button >
        <form action="" method="post" enctype="multipart/form-data">
            <input type="file" name='image_upload' class="d-none">
            <button type="button" class="setting_custom">설정</button >
            <button type="button" onclick="send_pic()">변경</button >
        </form>
        <!-- <button type="button" class="setting_custom" onclick="location.href='/chatting_setting'">설정</button > -->
        <!-- <img src="../" alt="프로필사진" width="40px"> -->
    </div>
    <div id="participants_bar">
        <div class="participants_header">
            <div class="participants_icon"><i class="fas fa-user-friends"></i></div>
            <div class="participants_txt">참여자</div>
            <div class="participants_number">몇명</div>
        </div>
        <div class="participants">
            <span class="get_profile_pic">hi</span>
        </div>
    </div>
    <div id="chat_bar">
        <div id="chat_name">
            <div>메신저</div>
        </div>
        <div class="chatting">
            <div class="chat_back">
                <div class="chat_history"></div>
            </div>
            <div class="chat_editor">
                <textarea name="chat_input" class="chat_input" placeholder="메시지를 입력해주세요" autofocus></textarea>
                <div class="chat_btn">
                    <div class="chat_btns">
                        <select name="whisper" id="whisper">
                            <option class="whisper_always">귓속말</option>
                        </select>
                        <button type="button"><i class="far fa-image"></i></button>
                        <button type="button"><i class="far fa-smile"></i></button>
                        <button type="button"><i class="fas fa-at"></i></button>
                        
                    </div>
                    <button type="button" class="send_btn" onclick="send1()">보내기</button>
                </div>
            </div>
        </div>
        <div id="thred">
            <div class="thred_one">
                <button type="button" class="btn_mychat" onclick="btn_mychat()">나만의 채팅</button>
                <button type="button" class="btn_side_view" onclick="btn_side_view()">사이드뷰 사용</button>
            </div>
            <div class="thred_two d-none">
                <div class="thred_two_header">
                    <button>
                        <i class="fas fa-arrow-left" onclick="thred_choice()"></i>
                    </button>
                    <div class="thred_two_border"></div>
                </div>
                <div class="mychat">
                    <div class="chat_back">
                        <div class="chat_history"></div>
                    </div>
                    <div class="chat_editor">
                        <textarea name="chat_input" class="chat_input" placeholder="메시지를 입력해주세요" autofocus></textarea>
                        <div class="chat_btn">
                            <div class="chat_btns">
                                <button type="button"><i class="far fa-image"></i></button>
                                <button type="button"><i class="far fa-smile"></i></button>
                                <button type="button"><i class="fas fa-at"></i></button>
                            </div>
                            <button type="button" class="send_btn" onclick="send2()">보내기</button>
                        </div>
                </div>
                <div class="side_view"></div>
            </div>
        </div>
    </div>
    <script>
        $('.setting_custom').click(function(){$('input[name=image_upload]').trigger('click');});
        function send_pic(){
            $.ajax({
                type: 'POST',
                enctype: 'multipart/form-data',
                url: '/chatting',
                data: $('input[name=image_upload]'),
                dataType:"json",
                processData:false,
                contentType:false,
                success: function(data){
                    alert('성공');
                },
                error: function(data){
                    alert('실패');
                }
            });
        }

        let new_date = new Date();
        let now_year = new_date.getFullYear();
        let now_month = new_date.getMonth()+1;
        let now_date = new_date.getDate();
        let now_hour = new_date.getHours();
        let now_minutes = new_date.getMinutes();
        let today = `${now_year}년 ${now_month}월 ${now_date}일`;
        let what_time = `${now_hour}:${now_minutes}`;
        
        window.onload = function(){
            //날짜와 시간 생성
            today = `${now_year}년 ${now_month}월 ${now_date}일`;
            what_time = `${now_hour}:${now_minutes}`;
            if(now_hour>=12){
                if((now_hour-12)>=10){
                    now_hour = now_hour;
                    what_time = `${now_hour}:${now_minutes}am`
                }else{
                now_hour = '0'+now_hour-12;
                what_time = `${now_hour}:${now_minutes}pm`
                }
            }
            else if(now_hour>=1){
                if(now_hour>=10){
                    now_hour = now_hour;
                    what_time = `${now_hour}:${now_minutes}am`
                }else{
                    now_hour = '0'+now_hour;
                    what_time = `${now_hour}:${now_minutes}am`
                }
            }
            else{
                now_hour = now_hour+12;
                what_time = `${now_hour}:${now_minutes}am`
            }
            console.log(`${today} ${what_time}`);
        }

        //스레드 소개
        // function btn_mychat (){
        //     if($('.dec_mychat').hasClass('d-none')){
        //         console.log('디넌 삭제해')
        //         $('.dec_mychat').removeClass('d-none');
        //     }else{
        //         console.log('디넌 만들어')
        //         $('.dec_mychat').addClass('d-none');
        //     }
        // }
        // function btn_side_view(){
        //     if($('.dec_side_view').hasClass('d-none')){
        //         console.log('디넌 삭제해')
        //         $('.dec_side_view').removeClass('d-none');
        //     }else{
        //         console.log('디넌 만들어')
        //         $('.dec_side_view').addClass('d-none');
        //     }
            
        // }

        //thred 뒤로가기
        function thred_choice(){
            $('.thred_two').addClass('d-none');
            $('.thred_one').removeClass('d-none');
        }
        function btn_mychat (){
            $('.thred_two').removeClass('d-none');
            $('.thred_one').addClass('d-none');
        }
        function btn_side_view(){
            console.log('준비중 사이드뷰')
        }

        //채팅입력시 '보내기1' css활성화
        $('.chatting > .chat_editor > .chat_input').on('keyup',function(e){
            if(e.target.value.trim() == ''){
                $('.chatting > .chat_editor > .chat_btn > .send_btn').removeClass('active_btn');
            }else{
                $('.chatting > .chat_editor > .chat_btn > .send_btn').addClass('active_btn');
            }
        });

        //채팅입력시 '보내기2' css활성화
        $('.thred_two > .mychat > .chat_editor > .chat_input').on('keyup',function(e){
            if(e.target.value.trim() == ''){
                $('.thred_two > .mychat > .chat_editor > .chat_btn > .send_btn').removeClass('active_btn');
            }else{
                $('.thred_two > .mychat > .chat_editor > .chat_btn > .send_btn').addClass('active_btn');
            }
        });

        //채팅창 ctrl+Enter && 보내기 기능
        $('.chatting .chat_input').on('keydown', about_enter);
        $('.mychat .chat_input').on('keydown', about_enter);
        function about_enter(e){
            if(e.ctrlKey){
                switch(e.code){
                    case 'Enter': 
                    console.log('finally');
                    let caret = e.target.selectionStart;
                    console.log(caret);
                    e.target.setRangeText("\n", caret, caret, "end");
                    break;
                }
            }else if(e.which === 13){
                console.log($(this));
                if($(this).val().trim() == ''){
                    alert('메세지입력해줘');
                    e.preventDefault();
                    return;
                }
                else{
                    // console.log($(this)[0].parentNode.childNodes[3].children[0].children[0].id)
                    e.preventDefault();// 원래 enter key를 누르려던 것을 못하게한다.
                    if($(this)[0].parentNode.childNodes[3].children[0].children[0].id == 'whisper'){
                        send1(e);
                    }else{
                        send2(e);
                    }
                }
            }
        }

        // function send(mode){
        //     if($('.chatting .chat_input').val().trim() == ''){
        //         alert('메세지입력해줘');
        //         e.preventDefault();
        //         return;
        //     }else{
        //         e.preventDefault();// 원래 enter key를 누르려던 것을 못하게한다.
        //         const msg_wrapper = document.createElement('div');
        //         const msg_profile_pic = document.createElement('div');
        //         const msg_content = document.createElement('div');
        //         const msg_nameNtime = document.createElement('div');
        //         const msg_name = document.createElement('div');
        //         const msg_time = document.createElement('div');
        //         const msg_txt = document.createElement('div');
        //         msg_wrapper.classList.add('my_msg');
        //         msg_profile_pic.classList.add('msg_profile_pic');
        //         msg_profile_pic.innerText = '프사';
        //         msg_content.classList.add('msg_content');
        //         msg_nameNtime.classList.add('msg_nameNtime');
        //         msg_txt.classList.add('msg_txt');
        //         msg_name.innerText = socketId;
        //         msg_time.innerText = what_time;
        //         msg_name.classList.add('msg_name');
        //         msg_time.classList.add('msg_time');
        //         msg_txt.innerText = $('.chatting .chat_input').val();
        //         msg_nameNtime.append(msg_time);
        //         msg_nameNtime.append(msg_name);
        //         msg_content.append(msg_nameNtime, msg_txt);
        //         msg_wrapper.append(msg_profile_pic, msg_content);
        //         $('.chatting .chat_history').append(msg_wrapper);
        //         if(mode == 2)
        //         // socket.emit('send', $('.chatting .chat_input').val());
        //         // op_value = $('this .whisper_op');
        //         $('.chatting .chat_input' + mode).val('');
        //         $('.chatting .chat_back').scrollTop($('.chatting .chat_history').height());
        //         $('.chatting .chat_input').focus();
        //     }
        // }
        //채팅 보내기2
        function send2(e){
            // console.log($(this));
            if($('.mychat .chat_input').val().trim() == ''){
                alert('메세지입력해줘');
                e.preventDefault();
                return;
            }else{
                const msg_wrapper = document.createElement('div');
                const msg_profile_pic = document.createElement('div');
                const msg_content = document.createElement('div');
                const msg_nameNtime = document.createElement('div');
                const msg_name = document.createElement('div');
                const msg_time = document.createElement('div');
                const msg_txt = document.createElement('div');
                msg_wrapper.classList.add('my_msg');
                msg_profile_pic.classList.add('msg_profile_pic');
                msg_profile_pic.innerText = '프사';
                msg_content.classList.add('msg_content');
                msg_nameNtime.classList.add('msg_nameNtime');
                msg_txt.classList.add('msg_txt');
                msg_name.innerText = socketId;
                msg_time.innerText = what_time;
                msg_name.classList.add('msg_name');
                msg_time.classList.add('msg_time');
                msg_txt.innerText = $('.mychat .chat_input').val();
                msg_nameNtime.append(msg_time);
                msg_nameNtime.append(msg_name);
                msg_content.append(msg_nameNtime, msg_txt);
                msg_wrapper.append(msg_profile_pic, msg_content);
                $('.mychat .chat_history').append(msg_wrapper);
                $('.mychat .chat_input').val('');
                $('.mychat .chat_back').scrollTop($('.mychat .chat_history').height());
                $('.mychat .chat_input').focus();
            }
        }
        
        //채팅 보내기1
        // let op_value;
        function send1(e){
            console.log('e:', e)
            if($('.chatting .chat_input').val().trim() == ''){
                alert('메세지입력해줘');
                e.preventDefault();
                return;
            }else{
                e.preventDefault();// 원래 enter key를 누르려던 것을 못하게한다.
                const msg_wrapper = document.createElement('div');
                const msg_profile_pic = document.createElement('div');
                const msg_content = document.createElement('div');
                const msg_nameNtime = document.createElement('div');
                const msg_name = document.createElement('div');
                const msg_time = document.createElement('div');
                const msg_txt = document.createElement('div');
                msg_wrapper.classList.add('my_msg');
                msg_profile_pic.classList.add('msg_profile_pic');
                msg_profile_pic.innerHTML = `<img src="${profile_pic}" alt="프로필사진">`;
                msg_content.classList.add('msg_content');
                msg_nameNtime.classList.add('msg_nameNtime');
                msg_txt.classList.add('msg_txt');
                msg_name.innerText = socketId;
                msg_time.innerText = what_time;
                msg_name.classList.add('msg_name');
                msg_time.classList.add('msg_time');
                msg_txt.innerText = $('.chatting .chat_input').val();
                msg_nameNtime.append(msg_time);
                msg_nameNtime.append(msg_name);
                msg_content.append(msg_nameNtime, msg_txt);
                msg_wrapper.append(msg_profile_pic, msg_content);
                $('.chatting .chat_history').append(msg_wrapper);
                socket.emit('send', $('.chatting .chat_input').val());
                // op_value = $('this .whisper_op');
                $('.chatting .chat_input').val('');
                $('.chatting .chat_back').scrollTop($('.chatting .chat_history').height());
                $('.chatting .chat_input').focus();
            }
        }

        //소켓
        const socket = io.connect(); //서버와 소켓을 생성한다.
        let socketId;
        let user_list = [];

        socket.on('connect', function(data){
            // $('.chat_history').append("<p class='sys'>" + socket.id + " 입장 </p>");
        })
        
        // socket.on('new_profile_pic', (data)=>{
        //     console.log(data);
        // });

        socket.on('new_msg', (data)=>{
            console.log(`메세지 보낸사람은 ${data.socket_id} 나의 아이디는 ${socketId}`)
            user_list = user_list;
            if(data.socket_id != socketId){
                // if(op_value == socketId){
                //     console.log('귓속말 받음')
                // }
                const msg_wrapper = document.createElement('div');
                const msg_profile_pic = document.createElement('div');
                const msg_content = document.createElement('div');
                const msg_nameNtime = document.createElement('div');
                const msg_name = document.createElement('div');
                const msg_time = document.createElement('div');
                const msg_txt = document.createElement('div');
                msg_wrapper.classList.add('new_msg');
                msg_profile_pic.classList.add('msg_profile_pic');
                msg_profile_pic.innerText = '프사';
                msg_content.classList.add('msg_content');
                msg_nameNtime.classList.add('msg_nameNtime');
                msg_txt.classList.add('msg_txt');
                msg_name.innerText = data.socket_id
                msg_time.innerText = what_time;
                msg_name.classList.add('msg_name');
                msg_time.classList.add('msg_time');
                msg_txt.innerText = data.msg;
                msg_nameNtime.append(msg_name, msg_time);
                msg_content.append(msg_nameNtime, msg_txt);
                msg_wrapper.append(msg_profile_pic, msg_content);
                $('.chatting .chat_history').append(msg_wrapper);
                $('.chatting .chat_back').scrollTop($('.chat_history').height());
            }
        })
        
        socket.on('saveId', (data)=>{
            socketId = data;
            console.log(`메세지 보낸사람은 ${data} 나의 아이디는 ${data}`);
        });
        
        socket.on('enter', (data)=>{
            console.log(today);
            console.log('입장날짜', $(".sys_date").text != today);
            profile_pic = data.profile_pic;
            //오늘날짜가 메세지창에 떠있지않으면 오늘날짜 추가
            if($(".sys_date").text != today){
                $('.chat_history').append(`<p class='sys_date'>${today}</p>`);
            }

            $('.chatting .chat_history').append(`<p class='sys'> ${data.socket_id} </p>`);
            $('.chatting .chat_back').scrollTop($('.chat_history').height());

            //사용자 목록 user_list && 귓속말 whisper
            $('.participants').empty();
            $('.whisper_op').remove();
            // for(let i=0; i<data.user_list.length;i++){
            //     $('.participants').append(`<div class='participants_name'> ${data.user_list[i]} </div>`);  
            // }
            for(key in data.user_list){
                $('.participants').append(`<div class='participants_name'> ${data.user_list[key]} </div>`);
                $('#whisper').append(`<option class='whisper_op' value="${data.user_list[key]}"> ${data.user_list[key]} </option>`);
            }
        })

        socket.on('exit', (data)=>{
            //오늘날짜가 메세지창에 떠있지않으면 오늘날짜 추가
            // console.log('퇴장날짜',$(".sys_date").text != today);
            if($(".sys_date").text != today){
                $('.chat_history').append(`<p class='sys_date'>${today}</p>`);
            }

            $('.chat_history').append(`<p class='sys'> ${data.socket_id} </p>`);
            $('.chat_back').scrollTop($('.chat_history').height());

            //사용자 목록 user_list && 귓속말 whisper
            $('.participants').empty();
            $('.whisper_op').remove();
            // for(let i=0; i<data.user_list.length;i++){
            //     $('.participants').append(`<div class='participants_name'> ${data.user_list[i]} </div>`);  
            // }
            for(let key in data.user_list){
                $('.participants').append(`<div class='participants_name'> ${data.user_list[key]} </div>`);
                $('#whisper').append(`<option class='whisper_op'> ${data.user_list[key]} </option>`);
            }
        })
    </script>
</body>
</html>