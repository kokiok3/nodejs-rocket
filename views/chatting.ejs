<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>rocket messenger</title>
    <link rel="stylesheet" type="text/css" href="../static/css/rocket_chat.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/3.0.4/socket.io.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.js"
            integrity="sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css" integrity="sha384-DyZ88mC6Up2uqS4h/KRgHuoeGwBcD4Ng9SiP4dIRy0EXTlnuz47vAwmeGwVChigm" crossorigin="anonymous">
    <link rel="icon" href="../static/favicon/rocket1.ico" type="image/x-icon" sizes="16x16">
</head>
<body>
    <!-- Modal -->
    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">프로필 변경</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form action="" method="post" id="form_data" enctype="multipart/form-data">
                        <div class="image_upload">
                            <label for="image_upload">프로필 사진</label><br>
                            <input type="file" name='image_upload' id="image_upload">
                        </div>
                        <div class="user_name">
                            <label for="user_name">유저 이름</label><br>
                            <input type="text" name='user_name' id="user_name">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" id="setting_change" class="btn" data-bs-dismiss="modal" onclick="change_profile()">저장</button >
                </div>
            </div>
        </div>
    </div>
    <div id="setting_bar">
        <button type="button" class="setting_mypic"></button >
        <button type="button" class="setting_custom" data-bs-toggle="modal" data-bs-target="#exampleModal"><i class="fas fa-cog"></i></button >
    </div>
    <div id="participants_bar">
        <!-- 참여자 -->
        <div class="participants_header">
            <div class="participants_icon"><i class="fas fa-user-friends"></i></div>
            <div class="participants_txt">참여자</div>
            <div class="participants_number"></div>
        </div>
        <div class="participants"></div>
        <!-- 참여채널 -->
        <div class="participants_header">
            <!-- <div class="participants_icon"><i class="fas fa-server"></i></i></div> -->
            <div class="participants_icon"><i class="fas fa-comments"></i></div>
            <div class="participants_txt">참여채널</div>
        </div>
    </div>
    <div id="chat_bar">
        <div id="chat_name">
            <div>메신저</div>
        </div>
        <div class="chatting_1">
            <div class="chat_back">
                <div class="chat_history"></div>
            </div>
            <div class="chat_whisper d-none">
                <select name="whisper" id="whisper" size="2">
    <!--                <option selected>귓속말</option>-->
                </select>
            </div>
            <div class="chat_editor">
                <textarea name="chat_input" id="chat_input" class="chat_input_1" placeholder="메시지를 입력해주세요" autofocus></textarea>
                <div class="chat_btns">
                    <div class="chat_each_btn">
                        <form action="" method="post" id="form_data" enctype="multipart/form-data">
                            <input type="file" name='btn_send_img' id="btn_send_img" class="d-none">
                            <button type="button" class="btn_send_img"><i class="far fa-image"></i></button>
                        </form>
                        <button type="button" class="btn_emoji"><i class="far fa-smile"></i></button>
                        <button type="button" class="btn_email"><i class="fas fa-at"></i></button>
                    </div>
                    <!-- <select name="mySelect" id="mySelect">
                    </select> -->
                    <button type="button" class="send_btn" onclick="send(event, mode=1)">보내기</button>
                </div>
            </div>
        </div>
        <div id="thred">
            <div class="thred_one">
                <button type="button" class="btn_mychat" onclick="btn_mychat()">나만의 채팅</button>
                <button type="button" class="btn_side_view" onclick="btn_side_view()">사이드뷰 사용</button>
            </div>
            <div class="thred_two d-none">
                <div class="thred_two_header">
                    <button>
                        <i class="fas fa-arrow-left" onclick="thred_choice()"></i>
                    </button>
                    <div class="thred_two_border"></div>
                </div>
                <div class="chatting_2">
                    <div class="chat_back">
                        <div class="chat_history"></div>
                    </div>
                    <div class="chat_editor">
                        <textarea name="chat_input" class="chat_input_2" placeholder="메시지를 입력해주세요" autofocus></textarea>
                        <div class="chat_btns">
                            <div class="chat_each_btn">
                                <button type="button"><i class="far fa-image"></i></button>
                                <button type="button"><i class="far fa-smile"></i></button>
                                <button type="button"><i class="fas fa-at"></i></button>
                            </div>
                            <button type="button" class="send_btn" onclick="send(event, 2)">보내기</button>
                        </div>
                    </div>
                </div>
                    <div class="side_view"></div>
            </div>
        </div>
    </div>
    <script>
        //이미지전송
        $('.btn_send_img').click(function(){$('input[name=btn_send_img]').trigger('click');});
        function btn_send_img(){

        }

        //이모티콘
        // $('.btn_emoji').click(function(){$('select[name=mySelect]').trigger('click');});
        // var mySelect = document.getElementById('mySelect')
        // var newOption;
        // var emojRange = [
        // [128513, 128591], [9986, 10160], [128640, 128704]
        // ];
        // //inside emojRange 2d array , define range arrays (start number,end number).
        // //1st array : Emoticons icons
        // //2nd range : Dingbats.
        // //3rd range : Transport and map symbols
        // for (var i = 0; i < emojRange.length; i++) {
        //     var range = emojRange[i];
        //     for (var x = range[0]; x < range[1]; x++) {
        //         newOption = document.createElement('option');
        //         newOption.value = x;
        //         newOption.innerHTML = "&#" + x + ";";
        //         mySelect.appendChild(newOption);
        //     }
        // }

        let new_date = new Date();
        let now_year = new_date.getFullYear();
        let now_month = new_date.getMonth()+1;
        let now_date = new_date.getDate();
        let now_hour = new_date.getHours();
        let now_minutes = new_date.getMinutes();
        let today = `${now_year}년 ${now_month}월 ${now_date}일`;
        let what_time = `${now_hour}:${now_minutes}`;

        window.onload = function(){
            //날짜와 시간 생성
            today = `${now_year}년 ${now_month}월 ${now_date}일`;
            what_time = `${now_hour}:${now_minutes}`;
            if(now_hour>=12){
                if((now_hour-12)>=10){
                    now_hour = now_hour;
                    what_time = `${now_hour}:${now_minutes}am`
                }else{
                    now_hour = '0'+now_hour-12;
                    what_time = `${now_hour}:${now_minutes}pm`
                }
            }
            else if(now_hour>=1){
                if(now_hour>=10){
                    now_hour = now_hour;
                    what_time = `${now_hour}:${now_minutes}am`
                }else{
                    now_hour = '0'+now_hour;
                    what_time = `${now_hour}:${now_minutes}am`
                }
            }
            else{
                now_hour = now_hour+12;
                what_time = `${now_hour}:${now_minutes}am`
            }
            // console.log(`${today} ${what_time}`);
        }

        //thred 뒤로가기
        function thred_choice(){
            $('.thred_two').addClass('d-none');
            $('.thred_one').removeClass('d-none');
        }
        function btn_mychat (){
            $('.thred_two').removeClass('d-none');
            $('.thred_one').addClass('d-none');
        }
        function btn_side_view(){
            console.log('준비중 사이드뷰')
        }

        //귓속말
        let caret_whisper;
        let show_whisper_target;
        let select_whisper_id;
        $('.chat_input_1').on('keydown', show_whisper)
        function show_whisper(e){
            if($('#whisper')[0].length >= 2){
                if(e.shiftKey){
                    switch(e.code){
                        case 'Digit2':
                            $('.chat_whisper').removeClass('d-none');
                            $('#whisper').on('change', select_whisper);
                            caret_whisper = e.target.selectionStart;
                            show_whisper_target = e.target;
                            break;
                    }
                }
            }
            if(e.code == 'Backspace'){
                $('.chat_whisper').addClass('d-none');
            }
        }
        function select_whisper(e){
            $('.chat_whisper').addClass('d-none');
            // console.log(caret_whisper);
            console.log(show_whisper_target);
            show_whisper_target.setRangeText(e.target.value + ' ', caret_whisper+1, caret_whisper+1, "end");
            show_whisper_target.focus();
            caret_whisper = '';
            show_whisper_target = '';
            select_whisper_id = e.target.value;
            socket.emit('whisper', e.target.value);
            console.log($('#whisper')[0].selectedIndex);
            $('#whisper')[0].selectedIndex = -1;
        }

        //채팅입력시 '보내기' css활성화
        $('.chat_input_1').on('keyup', active_send_btn);
        $('.chat_input_2').on('keyup', active_send_btn)
        function active_send_btn(e){
        let chat_input_mode = e.target.className.charAt(11);
            if(e.target.value.trim() == ''){
                $(`.chatting_${chat_input_mode} > .chat_editor > .chat_btns > .send_btn`).removeClass('active_btn');
            }else{
                $(`.chatting_${chat_input_mode} > .chat_editor > .chat_btns > .send_btn`).addClass('active_btn');
            }
        }

        //채팅창 ctrl+Enter && 보내기 기능
        $('.chat_input_1').on('keydown', about_enter);
        $('.chat_input_2').on('keydown', about_enter);
        function about_enter(e){
            if(e.ctrlKey){
                switch(e.code){
                    case 'Enter':
                        let caret = e.target.selectionStart;
                        e.target.setRangeText("\n", caret, caret, "end");
                        break;
                }
            }else if(e.which === 13){
                if($(this).val().trim() == ''){
                    alert('메세지입력해줘');
                    e.preventDefault();
                    return;
                }
                else{
                    // console.log($(this)[0].parentNode.childNodes[3].children[0].children[0].id)
                    e.preventDefault();// 원래 enter key를 누르려던 것을 못하게한다.
                    if($(this)[0].parentNode.previousElementSibling.classList[0] == 'chat_whisper'){
                        send(e, 1);
                    }else{
                        send(e, 2);
                    }
                }
            }
        }

        //채팅 보내기
        function send(e, mode){
            // console.log(e);
            // console.log(mode);
            if($(`.chat_input_${mode}`).val().trim() == ''){
                alert('메세지입력해줘');
                e.preventDefault();
                return;
            }else{
                e.preventDefault();// 원래 enter key를 누르려던 것을 못하게한다.
                const msg_wrapper = document.createElement('div');
                const msg_profile_pic = document.createElement('div');
                const msg_content = document.createElement('div');
                const msg_nameNtime = document.createElement('div');
                const msg_name = document.createElement('div');
                const msg_time = document.createElement('div');
                const msg_txt = document.createElement('div');
                msg_wrapper.classList.add('my_msg');
                // console.log(select_whisper_id);
                // console.log(select_whisper_id != undefined)
                if(select_whisper_id != undefined){
                    msg_wrapper.classList.add('my_whisper');
                    select_whisper_id = undefined;
                }
                msg_profile_pic.classList.add('msg_profile_pic');
                msg_profile_pic.style.backgroundImage = `url(../${fs_rename})`;
                // msg_profile_pic.css({'background-image': `url(../${fs_rename})`});
                msg_content.classList.add('msg_content');
                msg_nameNtime.classList.add('msg_nameNtime');
                msg_txt.classList.add('msg_txt');
                msg_name.innerText = socketId;
                msg_time.innerText = what_time;
                msg_name.classList.add('msg_name');
                msg_time.classList.add('msg_time');
                msg_txt.innerText = $(`.chat_input_${mode}`).val();
                msg_nameNtime.append(msg_time);
                msg_nameNtime.append(msg_name);
                msg_content.append(msg_nameNtime, msg_txt);
                msg_wrapper.append(msg_profile_pic, msg_content);
                $(`.chatting_${mode} .chat_history`).append(msg_wrapper);
                socket.emit('send', $(`.chat_input_${mode}`).val());
                $(`.chat_input_${mode}`).val('');
                $(`.chatting_${mode} .chat_back`).scrollTop($(`.chatting_${mode} .chat_history`).height());
                $(`.chat_input_${mode}`).focus();
                if($('#whisper').hasClass('d-none') == false){
                    $('.chat_whisper').addClass('d-none');
                }
            }
        }

        //프로필 변경
        let fs_rename; //프로필 사진 이름
        // $('.setting_custom').click(function(){$('input[name=image_upload]').trigger('click');});
        function change_profile(){
            let form_data;
            form_data = new FormData($('#form_data')[0]);
            form_data.append('socket_id', socketId);

            console.log($('#form_data')[0]);
            socket.emit('change_profile', {user_name: $('input[name=user_name]').val(), socket_id: socketId});
            // $.ajax({
            //     type: 'POST',
            //     url: '/file_upload',
            //     data: form_data,
            //     enctype: 'multipart/form-data',
            //     processData:false,
            //     contentType:false,
            //     success: function(data){
            //         alert('성공: ' + data);
            //         fs_rename = data;
            //         $('.setting_mypic, .msg_profile_pic').css({'background-image': `url(../${fs_rename})`});
            //
            //     },
            //     error: function(err){
            //         alert('실패: ' + err.statusText);
            //         console.log(err);
            //     }
            // });
        }

        //소켓
        const socket = io.connect(); //서버와 소켓을 생성한다.
        let socketId;
        let random_profile_number;
        let random_profile_color;

        socket.on('connect', function(data){
            // $('.chat_history').append("<p class='sys'>" + socket.id + " 입장 </p>");
        })

        socket.on('save_info', (data)=>{
            socketId = data.socket_id;
            // console.log(`메세지 보낸사람은 ${data} 나의 아이디는 ${data}`);
            random_profile_number = data.new_user.random_profile_num;
            random_profile_color = data.random_color;

            //랜덤 프로필 사진
            console.log(random_profile_number);
            $('.setting_mypic').empty();
            $('.setting_mypic').append(`<img src="../static/image/image (${random_profile_number}).png">`);

            //랜덤 프로필 색상
            $('.setting_mypic').css({'background-color': random_profile_color});
        });

        socket.on('enter', (data)=>{
            // console.log(today);
            // console.log('입장날짜', $(".sys_date").text != today);

            //하루에 한번 오늘날짜 추가
            if($(".sys_date").text != today){
                $('.chatting_1 .chat_history').append(`<p class='sys_date'>${today}</p>`);
            }

            //입장 메세지
            $('.chatting_1 .chat_history').append(`<p class='sys'> ${data.socket_id} 님 입장하셨습니다. </p>`);
            $('.chatting_1 .chat_back').scrollTop($('.chat_history').height());

            //참여자 목록과 인원 && 귓속말 목록
            $('.participants').empty();
            $('.whisper_op').remove();
            for(let key in data.user_list){
                if(data.user_list[key].user_name == undefined){
                    $('.participants').append(`<div class='participants_name'> ${data.user_list[key].id} </div>`);
                }else{
                    $('.participants').append(`<div class='participants_name'> ${data.user_list[key].user_name} </div>`);
                }
                if(socketId != data.user_list[key].id){
                    if(data.user_list[key].user_name == undefined){
                        $('#whisper').append(`<option class='whisper_op' value="${data.user_list[key].id}"> ${data.user_list[key].id} </option>`);
                    }else{
                        $('#whisper').append(`<option class='whisper_op' value="${data.user_list[key].user_name}"> ${data.user_list[key].user_name} </option>`);
                    }}
                $('.participants_number').text(data.user_list.length + '명');
            }

        });

        socket.on('new_msg', (data)=>{
            // console.log('new!!!: ', data.whisper);
            // console.log(`메세지 보낸사람은 ${data.socket_id} 나의 아이디는 ${socketId}`)
            // console.log(socketId);
            // console.log(data.whisper);
            // console.log(data.whisper == socketId);
            if(data.whisper != undefined){
                // console.log('귓속말임');
                if(data.whisper == socketId){
                    const msg_wrapper = document.createElement('div');
                    const msg_profile_pic = document.createElement('div');
                    const msg_content = document.createElement('div');
                    const msg_nameNtime = document.createElement('div');
                    const msg_name = document.createElement('div');
                    const msg_time = document.createElement('div');
                    const msg_txt = document.createElement('div');
                    msg_wrapper.classList.add('whisper_msg');
                    msg_profile_pic.classList.add('msg_profile_pic');
                    if(fs_rename != undefined){
                        msg_profile_pic.style.backgroundImage = `url()`;
                    }else{
                        msg_profile_pic.style.backgroundImage = `url(../${fs_rename})`;
                    }
                    // msg_profile_pic.css({'background-image': `url(../${fs_rename})`});
                    msg_content.classList.add('msg_content');
                    msg_nameNtime.classList.add('msg_nameNtime');
                    msg_txt.classList.add('msg_txt');
                    msg_name.innerText = data.socket_id
                    msg_time.innerText = what_time;
                    msg_name.classList.add('msg_name');
                    msg_name.classList.add('msg_name');
                    msg_time.classList.add('msg_time');
                    msg_txt.innerText = data.msg;
                    msg_nameNtime.append(msg_name, msg_time);
                    msg_content.append(msg_nameNtime, msg_txt);
                    msg_wrapper.append(msg_profile_pic, msg_content);
                    $('.chatting_1 .chat_history').append(msg_wrapper);
                    $('.chatting_1 .chat_back').scrollTop($('.chat_history').height());
                }
            }else{
                // console.log('귓속말아님');
                if(data.socket_id != socketId){
                    const msg_wrapper = document.createElement('div');
                    const msg_profile_pic = document.createElement('div');
                    const msg_content = document.createElement('div');
                    const msg_nameNtime = document.createElement('div');
                    const msg_name = document.createElement('div');
                    const msg_time = document.createElement('div');
                    const msg_txt = document.createElement('div');
                    msg_wrapper.classList.add('new_msg');
                    msg_profile_pic.classList.add('msg_profile_pic');
                    if(fs_rename != undefined){
                        msg_profile_pic.style.backgroundImage = `url()`;
                    }else{
                        msg_profile_pic.style.backgroundImage = `url(../${fs_rename})`;
                    }
                    // msg_profile_pic.css({'background-image': `url(../${fs_rename})`});
                    msg_content.classList.add('msg_content');
                    msg_nameNtime.classList.add('msg_nameNtime');
                    msg_txt.classList.add('msg_txt');
                    msg_name.innerText = data.socket_id
                    msg_time.innerText = what_time;
                    msg_name.classList.add('msg_name');
                    msg_time.classList.add('msg_time');
                    msg_txt.innerText = data.msg;
                    msg_nameNtime.append(msg_name, msg_time);
                    msg_content.append(msg_nameNtime, msg_txt);
                    msg_wrapper.append(msg_profile_pic, msg_content);
                    $('.chatting_1 .chat_history').append(msg_wrapper);
                    $('.chatting_1 .chat_back').scrollTop($('.chat_history').height());
                }
            }
        });

        socket.on('change_profile', (data)=>{
            // console.log('참여자 수:', $('.participants')[0].childElementCount);
            console.log(data.profile.user_name);
            console.log(data.before_user_name);
            for(let i=0; i<$('.participants')[0].childElementCount; i++){
                // console.log($('.participants')[0].childNodes[i].innerText);
                console.log('유저아이디: ', $('.participants')[0].childNodes[i].innerText == data.profile.socket_id);
                console.log('유저네임: ', $('.participants')[0].childNodes[i].innerText == data.before_user_name);
                if($('.participants')[0].childNodes[i].innerText ==data.profile.socket_id
                    || $('.participants')[0].childNodes[i].innerText == data.before_user_name){
                    $('.participants')[0].childNodes[i].innerText = data.profile.user_name;
                }
            }
        });

        socket.on('exit', (data)=>{
            //오늘날짜가 메세지창에 떠있지않으면 오늘날짜 추가
            // console.log('퇴장날짜',$(".sys_date").text != today);
            if($(".sys_date").text != today){
                $('.chatting_1  .chat_history').append(`<p class='sys_date'>${today}</p>`);
            }

            $('.chatting_1 .chat_history').append(`<p class='sys'> ${data.socket_id} 님 퇴장하셨습니다. </p>`);
            $('.chatting_1 .chat_back').scrollTop($('.chat_history').height());

            //퇴장시 참여자 목록과 인원 && 귓속말
            $('.participants').empty();
            $('.whisper_op').remove();
            for(let key in data.user_list){
                // console.log(data.user_list[key]);
                $('.participants').append(`<div class='participants_name'> ${data.user_list[key].id} </div>`);
                $('.participants_number').text(data.user_list.length + '명');
                if(socketId != data.user_list[key].id){
                    $('#whisper').append(`<option class='whisper_op' value="${data.user_list[key].id}"> ${data.user_list[key].id} </option>`);
                }
            }
        });
    </script>
</body>
</html>